{"ast":null,"code":"import _defineProperty from \"/home/shubham/React Training august/training/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shubham/React Training august/training/src/pages/Trainee/components/AddDialog/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction validate() {\n  return yup.object().shape({\n    name: yup.string().required('Name is required'),\n    email: yup.string().email().required('Email is required'),\n    pwd: yup.string().min(8).required(\"Password is required\"),\n    Cpwd: yup.string().min(8).required(\"Confirm password  is required\").oneOf([yup.ref('pwd'), null], 'Passwords must match')\n  });\n}\n\nconst divStyle = {\n  color: 'red'\n};\n\nclass FormDialog extends Component {\n  constructor() {\n    super();\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = field => event => {\n      const touched = this.state.touched;\n      this.setState({\n        [field]: event.target.value,\n        touched: _objectSpread({}, touched, {\n          [field]: true\n        })\n      }, () => {\n        this.handleValidate(field);\n      });\n    };\n\n    this.onBlur = value => {\n      this.handleValidate(value);\n    };\n\n    this.hasTouched = () => {\n      const touched = this.state.touched;\n      let touchCheck = 0;\n      Object.keys(touched).forEach(a => {\n        if (touched[a] === true) touchCheck += 1;\n      });\n      if (touchCheck === 4) return true;\n      return false;\n    };\n\n    this.handleValidate = field => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            pwd = _this$state.pwd,\n            Cpwd = _this$state.Cpwd,\n            error = _this$state.error;\n      console.log('ss', field);\n      const schema = validate();\n      schema.validate({\n        name,\n        email,\n        pwd,\n        Cpwd\n      }, {\n        abortEarly: false\n      }).then(() => {\n        this.setState({\n          error: _objectSpread({}, error, {\n            [field]: ''\n          })\n        });\n      }).catch(err => {\n        console.log(err); // object\n\n        err.inner.forEach(errors => {\n          console.log(errors, field);\n\n          if (errors.path === field) {\n            console.log('ddd', field);\n            this.setState({\n              error: _objectSpread({}, error, {\n                [field]: errors.message\n              })\n            });\n          }\n\n          console.log('ll', error);\n        });\n\n        if (!err.inner.some(err => err.path === field)) {\n          console.log('in>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<', err);\n          this.setState({\n            error: _objectSpread({}, error, {\n              [field]: ''\n            })\n          });\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      pwd: '',\n      Cpwd: '',\n      open: false,\n      error: {\n        name: '',\n        email: '',\n        pwd: '',\n        Cpwd: ''\n      },\n      touched: {\n        name: false,\n        email: false,\n        pwd: false,\n        Cpwd: false\n      }\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          open = _this$state2.open,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          pwd = _this$state2.pwd,\n          Cpwd = _this$state2.Cpwd,\n          touched = _this$state2.touched,\n          error = _this$state2.error;\n    console.log({\n      \"Name\": name,\n      \"EMail\": email,\n      \"password\": pwd,\n      \"Confirm password\": Cpwd\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"ADD TRAINEE\"), React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Add Trainee\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Enter your trainee details\"), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-name\",\n      label: \"Name\",\n      value: name,\n      onBlur: () => this.onBlur('name'),\n      onChange: this.handleChange('name'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), error.name ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \" \", error.name) : ''), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoFocus: true,\n      id: \"name\",\n      value: email,\n      onBlur: () => this.onBlur('email'),\n      onChange: this.handleChange('email'),\n      label: \"Email Address\",\n      type: \"email\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), error.email ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" \", error.email) : ''), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoFocus: true,\n      id: \"name\",\n      password: pwd,\n      label: \"Password\",\n      type: \"email\",\n      onBlur: () => this.onBlur('pwd'),\n      onChange: this.handleChange('pwd'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), error.pwd ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" \", error.pwd) : ''), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoFocus: true,\n      password: Cpwd,\n      id: \"name\",\n      label: \"Confirm Password\",\n      type: \"email\",\n      onBlur: () => this.onBlur('Cpwd'),\n      onChange: this.handleChange('Cpwd'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), error.Cpwd ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" \", error.Cpwd) : ''))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Cancel\"), this.hasTouched() ? React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Submit\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"danger\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"submit\"))));\n  }\n\n}\n\nexport default FormDialog;","map":{"version":3,"sources":["/home/shubham/React Training august/training/src/pages/Trainee/components/AddDialog/index.jsx"],"names":["React","Component","yup","Button","TextField","Grid","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","validate","object","shape","name","string","required","email","pwd","min","Cpwd","oneOf","ref","divStyle","color","FormDialog","constructor","handleClickOpen","setState","open","handleClose","handleChange","field","event","touched","state","target","value","handleValidate","onBlur","hasTouched","touchCheck","Object","keys","forEach","a","error","console","log","schema","abortEarly","then","catch","err","inner","errors","path","message","some","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction validate() {\n    return yup.object().shape({\n      name: yup.string()\n      .required('Name is required'),\n      email: yup.string().email()\n      .required('Email is required'),\n      pwd: yup.string().min(8)\n      .required(\"Password is required\"),\n      Cpwd: yup.string().min(8)\n      .required(\"Confirm password  is required\")\n      .oneOf([yup.ref('pwd'), null], 'Passwords must match'),\n    \n    });\n     }\n     const divStyle = {\n        color: 'red',\n      };\n\nclass FormDialog extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name: '',\n            email: '',\n            pwd: '',\n            Cpwd: '',\n            open: false,\n            error: {\n                name: '',\n                email: '',\n                pwd: '',\n                Cpwd: '',\n\n            },\n            touched : {\n                name: false,\n                email: false,\n                pwd: false,\n                Cpwd: false\n            },\n        };\n    }\n\n   handleClickOpen = () => {\n    this.setState({open: true});\n  }\n\n   handleClose = () => {\n    this.setState({open: false});\n  }\n\n  handleChange = field => (event) => {\n      const { touched } = this.state;\n    this.setState({ [field]: event.target.value, touched: {...touched, [field]: true}}, () => {this.handleValidate(field)});\n}\n\nonBlur = (value) => {\n    this.handleValidate(value);\n}\n\nhasTouched = () => {\n    const { touched } = this.state;\n    let touchCheck = 0;\n    Object.keys(touched).forEach((a) => {\n        if(touched[a] === true) touchCheck += 1;\n    });\n    if (touchCheck === 4) return true;\n    return false;\n}\n\n  handleValidate = (field) => {\n    const { name, email, pwd, Cpwd, error } = this.state;\n    console.log('ss', field)\n    const schema = validate();\n    schema.validate({name, email, pwd, Cpwd },{abortEarly: false})\n    .then(() => {\n        this.setState({error:{ ...error,[field]: ''}})\n    }).catch((err) => {\n        console.log(err);\n        // object\n        err.inner.forEach((errors) => {\n            console.log(errors, field)\n            if (errors.path === field) {\n                console.log('ddd', field)\n                this.setState({error:{ ...error,[field]: errors.message }})\n            }\n            console.log('ll', error);\n        });\n        if (!(err.inner.some(err => err.path === field))) {\n            console.log('in>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<', err)\n            this.setState({\n            error: { ...error, [field]: '' },\n            });\n        }\n    })\n}\n\n render () {\n     const { open, name, email, pwd, Cpwd, touched, error } = this.state;\n     console.log({\"Name\": name, \"EMail\": email, \"password\": pwd, \"Confirm password\": Cpwd})\n    return (\n        <div>\n          <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n            ADD TRAINEE\n          </Button>\n          <Dialog open={open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Add Trainee</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Enter your trainee details\n              </DialogContentText>\n    \n    \n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n    \n          <TextField\n            id=\"outlined-name\"\n            label=\"Name\"\n            value={name}\n            onBlur={() => this.onBlur('name')}\n            onChange={this.handleChange('name')}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n          />\n          {(error.name) ? <p style={divStyle}> {error.name}</p> : ''}\n    \n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n                autoFocus\n                id=\"name\"\n                value={email}\n                onBlur={() => this.onBlur('email')}\n            onChange={this.handleChange('email')}\n                label=\"Email Address\"\n                type=\"email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n              {(error.email) ? <p style={divStyle}> {error.email}</p> : ''}\n            </Grid>\n            <Grid item xs={6}>\n            <TextField\n                autoFocus\n                id=\"name\"\n                password={pwd}\n                label=\"Password\"\n                type=\"email\"\n                onBlur={() => this.onBlur('pwd')}\n            onChange={this.handleChange('pwd')}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n                 {(error.pwd) ? <p style={divStyle}> {error.pwd}</p> : ''}\n            </Grid>\n            <Grid item xs={6}>\n            <TextField\n                autoFocus\n                password={Cpwd}\n                id=\"name\"\n                label=\"Confirm Password\"\n                type=\"email\"\n                onBlur={() => this.onBlur('Cpwd')}\n            onChange={this.handleChange('Cpwd')}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n              />\n                 {(error.Cpwd) ? <p style={divStyle}> {error.Cpwd}</p> : ''}\n            </Grid>\n          </Grid> \n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n            {this.hasTouched() ?     <Button onClick={this.handleClose} color=\"primary\">\n                Submit\n              </Button> :\n                <Button variant=\"contained\" color=\"danger\" disabled>submit</Button> }\n            </DialogActions>\n          </Dialog>\n        </div>\n      );\n }\n}\n\nexport default FormDialog;\n"]},"metadata":{},"sourceType":"module"}