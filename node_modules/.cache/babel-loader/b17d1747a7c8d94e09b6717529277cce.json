{"ast":null,"code":"import _defineProperty from \"/home/shubham/React Training august/training/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shubham/React Training august/training/src/pages/InputText/InputText.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport * as yup from 'yup';\nimport { withStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { SelectOption, RadioField, Button, MathLogic } from '../../component';\nimport styles from './styles';\n\nfunction Validate() {\n  return yup.object().shape({\n    value: yup.string().required('Name is required').min(3, 'Min 3 characters required'),\n    game: yup.string().required('Game is required'),\n    footballRole: yup.string().required(\"Football Role is required\"),\n    cricketRole: yup.string().required(\"Cricket Role is required\")\n  });\n}\n\nconst divStyle = {\n  color: 'red'\n};\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.handleNameChange = field => event => {\n      const touched = this.state.touched;\n      this.setState({\n        value: event.target.value,\n        touched: _objectSpread({}, touched, {\n          [field]: true\n        })\n      }, () => {\n        this.handleValidate(field);\n      });\n    };\n\n    this.onBlur = value => {\n      this.handleValidate(value);\n    };\n\n    this.handleGameChange = field => event => {\n      const touched = this.state.touched;\n      this.setState({\n        game: event.target.value,\n        touched: _objectSpread({}, touched, {\n          [field]: true\n        })\n      }, () => {\n        this.handleValidate(field);\n      });\n    };\n\n    this.handleCricRoleChange = field => event => {\n      const touched = this.state.touched;\n      this.setState({\n        cricketRole: event.target.value,\n        touched: _objectSpread({}, touched, {\n          [field]: true\n        })\n      }, () => {\n        this.handleValidate(field);\n      });\n    };\n\n    this.handleFootRoleChange = field => event => {\n      const touched = this.state.touched;\n      this.setState({\n        footballRole: event.target.value,\n        touched: _objectSpread({}, touched, {\n          [field]: true\n        })\n      }, () => {\n        this.handleValidate(field);\n      });\n    };\n\n    this.hasTouched = () => {\n      const touched = this.state.touched;\n      console.log(touched);\n      let touchCheck = 0;\n      Object.keys(touched).forEach(a => {\n        if (touched[a] === true) touchCheck += 1;\n      });\n      if (touchCheck === 3) return true;\n      return false;\n    };\n\n    this.handleValidate = field => {\n      console.log(field);\n      const _this$state = this.state,\n            value = _this$state.value,\n            error = _this$state.error,\n            game = _this$state.game,\n            footballRole = _this$state.footballRole,\n            cricketRole = _this$state.cricketRole;\n      const schema = Validate();\n      schema.validate({\n        value,\n        game,\n        footballRole,\n        cricketRole\n      }, {\n        abortEarly: false\n      }).then(() => {\n        this.setState({\n          error: _objectSpread({}, error, {\n            [field]: ''\n          })\n        });\n      }).catch(err => {\n        err.inner.forEach(errors => {\n          if (errors.path === field) {\n            this.setState({\n              error: _objectSpread({}, error, {\n                [field]: errors.message\n              })\n            });\n          }\n        });\n\n        if (!err.inner.some(err => err.path === field)) {\n          this.setState({\n            error: _objectSpread({}, error, {\n              [field]: ''\n            })\n          });\n        }\n      });\n    };\n\n    this.state = {\n      value: '',\n      game: '',\n      cricketRole: '',\n      footballRole: '',\n      error: {\n        value: '',\n        game: '',\n        cricketRole: '',\n        footballRole: ''\n      },\n      touched: {\n        value: false,\n        game: false,\n        footballRole: false,\n        cricketRole: false\n      }\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          value = _this$state2.value,\n          game = _this$state2.game,\n          cricketRole = _this$state2.cricketRole,\n          footballRole = _this$state2.footballRole,\n          error = _this$state2.error,\n          touched = _this$state2.touched;\n    const classes = this.props.classes;\n    console.log({\n      \"value\": value,\n      \"Sports\": game,\n      \"CricketRole\": cricketRole,\n      \"FootballRole\": footballRole,\n      \"error\": error\n    });\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Validation Demo\"), React.createElement(TextField, {\n      label: \"Name\",\n      value: value,\n      onBlur: () => this.onBlur('value'),\n      onChange: this.handleNameChange('value'),\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), error.value ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" \", error.value) : '', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(SelectOption, {\n      game: game,\n      onBlur: () => this.onBlur('game'),\n      handleGameChange: this.handleGameChange('game'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), error.game ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" \", error.game) : ''), React.createElement(RadioField, {\n      game: game,\n      className: classes.radio,\n      onBlur: () => this.onBlur('cricketRole'),\n      handleCricRoleChange: this.handleCricRoleChange('cricketRole'),\n      handleFootRoleChange: this.handleFootRoleChange('footballRole'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), error.footballRole ? React.createElement(\"p\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \" \", error.footballRole) : '', React.createElement(\"div\", {\n      className: classes.btn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.hasTouched() ? React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Submit\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/home/shubham/React Training august/training/src/pages/InputText/InputText.jsx"],"names":["React","Component","yup","withStyles","TextField","FormControl","SelectOption","RadioField","Button","MathLogic","styles","Validate","object","shape","value","string","required","min","game","footballRole","cricketRole","divStyle","color","Form","constructor","handleNameChange","field","event","touched","state","setState","target","handleValidate","onBlur","handleGameChange","handleCricRoleChange","handleFootRoleChange","hasTouched","console","log","touchCheck","Object","keys","forEach","a","error","schema","validate","abortEarly","then","catch","err","inner","errors","path","message","some","render","classes","props","root","heading","radio","btn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as yup from 'yup';\nimport { withStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { SelectOption, RadioField, Button, MathLogic } from '../../component';\nimport styles from './styles';\n\n function Validate() {\nreturn yup.object().shape({\n  value: yup.string()\n  .required('Name is required')\n  .min(3, 'Min 3 characters required'),\n  game: yup.string()\n  .required('Game is required'),\n  footballRole: yup.string()\n  .required(\"Football Role is required\"),\n  cricketRole: yup.string()\n  .required(\"Cricket Role is required\"),\n\n});\n }\n\n const divStyle = {\n    color: 'red',\n  };\n\nclass Form extends Component {\n    constructor() {\n        super()\n        this.state = {\n            value: '',\n            game: '',\n            cricketRole: '',\n            footballRole: '',\n            error: {\n                value:'',\n                game:'',\n                cricketRole:'',\n                footballRole:'',\n\n            },\n            touched : {\n                value: false,\n                game: false,\n                footballRole: false,\n                cricketRole: false\n            },\n        };\n    }\n\n    handleNameChange = field => (event) => {\n        const { touched } = this.state;\n        this.setState({ value: event.target.value, touched: {...touched, [field]: true}}, () => {this.handleValidate(field)});\n    }\n\n    onBlur = (value) => {\n        this.handleValidate(value);\n    }\n   \n    handleGameChange = field => (event) => {\n        const { touched } = this.state;\n        this.setState({ game: event.target.value, touched: {...touched, [field]: true}}, () =>{this.handleValidate(field)});\n    }\n    handleCricRoleChange = field => (event) => {\n        const { touched } = this.state;\n        this.setState({ cricketRole: event.target.value, touched: {...touched,[field]: true}}, () =>{this.handleValidate(field)});\n    }\n    handleFootRoleChange = field => (event) => {\n        const { touched } = this.state;\n        this.setState({ footballRole: event.target.value, touched: {...touched,[field]: true}}, () =>{this.handleValidate(field)});\n    }\n    hasTouched = () => {\n        const { touched } = this.state;\n        console.log(touched)\n        let touchCheck = 0;\n        Object.keys(touched).forEach((a) => {\n            if(touched[a] === true) touchCheck += 1;\n        });\n        if (touchCheck === 3) return true;\n        return false;\n    }\n    handleValidate = (field) => {\n        console.log(field)\n        const { value, error, game, footballRole, cricketRole } = this.state;\n        const schema = Validate();\n        schema.validate({value, game, footballRole, cricketRole},{abortEarly: false})\n        .then(() => {\n            this.setState({error:{ ...error,[field]: ''}})\n        }).catch((err) => {\n            err.inner.forEach((errors) => {\n                if (errors.path === field) {\n                    this.setState({error:{ ...error,[field]: errors.message }})\n                }\n            });\n        if (!(err.inner.some(err => err.path === field))) {\n            this.setState({\n            error: { ...error, [field]: '' },\n            });\n        }\n        });\n    }\n\n    render() {\n        const { value, game, cricketRole, footballRole, error, touched } = this.state;\n        const { classes } = this.props;\n        console.log({\"value\": value, \"Sports\": game, \"CricketRole\": cricketRole, \"FootballRole\": footballRole, \"error\": error});\n        return (\n            <div  className={classes.root}>\n            <h2 className={classes.heading}>Validation Demo</h2>\n                <TextField\n                    label=\"Name\"\n                    value={value}\n                    onBlur={() => this.onBlur('value')}\n                    onChange={this.handleNameChange('value')}\n                    variant=\"outlined\"\n                    fullWidth\n                />\n                {(error.value) ? <p style={divStyle}> {error.value}</p> : ''}\n                <br />\n                <FormControl variant=\"outlined\">\n                <SelectOption \n                    game={game}\n                    onBlur={() => this.onBlur('game')}\n                    handleGameChange={this.handleGameChange('game')}\n                />\n                   {(error.game) ? <p style={divStyle}> {error.game}</p> : ''}\n                </FormControl>\n                <RadioField\n                  game={game}\n                  className={classes.radio}\n                  onBlur={() => this.onBlur('cricketRole')}\n                  handleCricRoleChange={this.handleCricRoleChange('cricketRole')}\n                  handleFootRoleChange={this.handleFootRoleChange('footballRole')}\n                />\n                   {(error.footballRole) ? <p style={divStyle}> {error.footballRole}</p> : ''}\n               <div className={classes.btn}>\n               {this.hasTouched() ?    <Button variant=\"contained\" color=\"primary\">Submit</Button> :\n                <Button variant=\"contained\" color=\"primary\" disabled>Submit</Button> }\n               </div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Form);"]},"metadata":{},"sourceType":"module"}